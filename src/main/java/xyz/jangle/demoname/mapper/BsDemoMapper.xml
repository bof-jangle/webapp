<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.jangle.demoname.dao.BsDemoMapper">
	<resultMap id="BaseResultMap"
		type="xyz.jangle.demoname.model.BsDemo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="uuid" jdbcType="VARCHAR" property="uuid" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="dm_desc" jdbcType="VARCHAR" property="dmDesc" />
		<result column="dm_desc2" jdbcType="VARCHAR" property="dmDesc2" />
		<result column="dm_desc3" jdbcType="VARCHAR" property="dmDesc3" />
		<result column="dm_desc4" jdbcType="VARCHAR" property="dmDesc4" />
		<result column="dm_desc5" jdbcType="VARCHAR" property="dmDesc5" />
		<result column="dm_desc6" jdbcType="VARCHAR" property="dmDesc6" />
		<result column="dm_desc7" jdbcType="VARCHAR" property="dmDesc7" />
		<result column="dm_desc8" jdbcType="VARCHAR" property="dmDesc8" />
		<result column="dm_desc9" jdbcType="VARCHAR" property="dmDesc9" />
	</resultMap>
	<sql id="all_column">
		id, 
		uuid, 
		create_time, 
		update_time, 
		status, 
		dm_desc,
		dm_desc2,
		dm_desc3,
		dm_desc4,
		dm_desc5,
		dm_desc6,
		dm_desc7,
		dm_desc8,
		dm_desc9
	</sql>
	<sql id="page_where">
		<where>
			<if test="dmDesc != null and dmDesc != ''">
				AND dm_desc like CONCAT('%',#{dmDesc},'%')
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			
		</where>
	</sql>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		update bs_demo
		set status = 2
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="batchDeleteByPrimaryKey" parameterType="xyz.jangle.demoname.model.BsDemo">
		update bs_demo
		set status = 2
		where id in 
		<foreach close=")" collection="idsArray" item="listItem" open="(" separator=",">
                    #{listItem}
        </foreach>
	</delete>
	<insert id="insert"
		parameterType="xyz.jangle.demoname.model.BsDemo" useGeneratedKeys="true" keyProperty="id">
		insert into bs_demo ( uuid, create_time,
		update_time,
		status,
		dm_desc,
		dm_desc2,
		dm_desc3,
		dm_desc4,
		dm_desc5,
		dm_desc6,
		dm_desc7,
		dm_desc8,
		dm_desc9
		)
		values (
		#{uuid,jdbcType=VARCHAR},
		now(),
		now(), #{status,jdbcType=INTEGER},
		#{dmDesc,jdbcType=VARCHAR},
		#{dmDesc2,jdbcType=VARCHAR},
		#{dmDesc3,jdbcType=VARCHAR},
		#{dmDesc4,jdbcType=VARCHAR},
		#{dmDesc5,jdbcType=VARCHAR},
		#{dmDesc6,jdbcType=VARCHAR},
		#{dmDesc7,jdbcType=VARCHAR},
		#{dmDesc8,jdbcType=VARCHAR},
		#{dmDesc9,jdbcType=VARCHAR}
		)
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="xyz.jangle.demoname.model.BsDemo">
		update bs_demo
		set uuid = #{uuid,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		dm_desc = #{dmDesc,jdbcType=VARCHAR},
		dm_desc2 = #{dmDesc2,jdbcType=VARCHAR},
		dm_desc3 = #{dmDesc3,jdbcType=VARCHAR},
		dm_desc4 = #{dmDesc4,jdbcType=VARCHAR},
		dm_desc5 = #{dmDesc5,jdbcType=VARCHAR},
		dm_desc6 = #{dmDesc6,jdbcType=VARCHAR},
		dm_desc7 = #{dmDesc7,jdbcType=VARCHAR},
		dm_desc8 = #{dmDesc8,jdbcType=VARCHAR},
		dm_desc9 = #{dmDesc9,jdbcType=VARCHAR}
		<if test="id != null and id gt 0">
		where id = #{id,jdbcType=BIGINT}
		</if>
		<if test="(id == null or id lt 1 ) and uuid != null and uuid != ''">
		where uuid = #{uuid,jdbcType=VARCHAR}
		</if>
		<if test="(id == null or id lt 1 ) and (uuid == null or uuid == '')">
		where id = #{id,jdbcType=BIGINT}
		</if>
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select 
		<include refid="all_column" />
		from bs_demo
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select 
		<include refid="all_column" />
		from bs_demo
	</select>
	<select id="selectByParam" resultMap="BaseResultMap" parameterType="java.util.Map">
		select 
		<include refid="all_column" />
		from bs_demo
		<include refid="page_where" />
	</select>
	<select id="selectPage" resultMap="BaseResultMap"
		parameterType="xyz.jangle.demoname.model.BsDemo">
		select 
		<include refid="all_column" />
		from bs_demo
		<include refid="page_where" />
		order by id DESC
		limit #{pageStart,jdbcType=BIGINT},
		#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="selectPageCount" resultType="java.lang.Long"
		parameterType="xyz.jangle.demoname.model.BsDemo">
		select count(*)
		from bs_demo
		<include refid="page_where" />
	</select>
</mapper>