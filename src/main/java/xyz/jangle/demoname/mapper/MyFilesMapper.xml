<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.jangle.demoname.dao.MyFilesMapper">
	<resultMap id="BaseResultMap"
		type="xyz.jangle.demoname.model.MyFiles">
		<id column="id" jdbcType="BIGINT" property="id" />
			<result column="uuid" jdbcType="VARCHAR" property="uuid" />
			<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
			<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
			<result column="status" jdbcType="INTEGER" property="status" />
			<result column="creator_uuid" jdbcType="VARCHAR" property="creatorUuid" />
			<result column="file_name" jdbcType="VARCHAR" property="fileName" />
			<result column="dm_desc" jdbcType="VARCHAR" property="dmDesc" />
			<result column="dm_desc2" jdbcType="VARCHAR" property="dmDesc2" />
	</resultMap>
	<sql id="all_column">
		<![CDATA[
			id,
			uuid,
			create_time,
			update_time,
			status,
			creator_uuid,
			file_name,
			dm_desc,
			dm_desc2
		]]>
	</sql>
	<sql id="page_where">
		<where>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="status != null and status != ''">
				AND creator_uuid = #{creatorUuid}
			</if>
		</where>
	</sql>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		update my_files
		set status = 2
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="batchDeleteByPrimaryKey" parameterType="xyz.jangle.demoname.model.MyFiles">
		update my_files
		set status = 2
		where id in 
		<foreach close=")" collection="idsArray" item="listItem" open="(" separator=",">
                    #{listItem}
        </foreach>
	</delete>
	<delete id="batchDeleteByPrimaryKeyActually" parameterType="xyz.jangle.demoname.model.MyFiles">
		delete from my_files
		where status = 2
		and id in
		<foreach close=")" collection="idsArray" item="listItem" open="(" separator=",">
                    #{listItem}
        </foreach>
	</delete>
	<insert id="insert"
		parameterType="xyz.jangle.demoname.model.MyFiles" useGeneratedKeys="true" keyProperty="id">
		insert into my_files ( 
			uuid,
			create_time,
			update_time,
			status,
			creator_uuid,
			file_name,
			dm_desc,
			dm_desc2
		)
		values (
			#{uuid,jdbcType=VARCHAR},
			now(),
			now(),
			#{status,jdbcType=INTEGER},
			#{creatorUuid,jdbcType=VARCHAR},
			#{fileName,jdbcType=VARCHAR},
			#{dmDesc,jdbcType=VARCHAR},
			#{dmDesc2,jdbcType=VARCHAR}
		)
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="xyz.jangle.demoname.model.MyFiles">
		<![CDATA[
		update my_files
		set 
				update_time = now(),
				status = #{status,jdbcType=INTEGER},
				creator_uuid = #{creatorUuid,jdbcType=VARCHAR},
				file_name = #{fileName,jdbcType=VARCHAR},
				dm_desc = #{dmDesc,jdbcType=VARCHAR},
				dm_desc2 = #{dmDesc2,jdbcType=VARCHAR}
		]]>
		<if test="id != null and id gt 0">
		where id = #{id,jdbcType=BIGINT}
		</if>
		<if test="(id == null or id lt 1 ) and uuid != null and uuid != ''">
		where uuid = #{uuid,jdbcType=VARCHAR}
		</if>
		<if test="(id == null or id lt 1 ) and (uuid == null or uuid == '')">
		where id = #{id,jdbcType=BIGINT}
		</if>
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select 
		<include refid="all_column" />
		from my_files
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select 
		<include refid="all_column" />
		from my_files
	</select>
	<select id="selectByParam" resultMap="BaseResultMap" parameterType="java.util.Map">
		select 
		<include refid="all_column" />
		from my_files
		<include refid="page_where" />
	</select>
	<select id="selectPage" resultMap="BaseResultMap"
		parameterType="xyz.jangle.demoname.model.MyFiles">
		select 
		<include refid="all_column" />
		from my_files
		<include refid="page_where" />
		order by id DESC
		limit #{pageStart,jdbcType=BIGINT},
		#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="selectPageCount" resultType="java.lang.Long"
		parameterType="xyz.jangle.demoname.model.MyFiles">
		select count(*)
		from my_files
		<include refid="page_where" />
	</select>
</mapper>